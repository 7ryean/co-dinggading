

-- 알고 싶었던 지표 : 유저수,가입수,참여수 >> 정확한 정의는 아니지만 먼저 3개로 나눔 
-- 총유저수가 주는지 가입관련 수가 주는건지 참여하는 유저수가 주는 것인지 간단히 확인하려함 
-- 8.3일부터 TOTAL 수 급감  >> engagemnet가 감소

SELECT *
      , CAST(engagement AS FLOAT)  / CAST(total AS FLOAT)       AS en_ratio 
      , CAST(signup_flow  AS FLOAT) / CAST(total AS FLOAT)    AS sign_ratio 
FROM(
  SELECT  date_trunc('week', occurred_at)    AS week 
        ,COUNT(DISTINCT CASE WHEN event_type ='engagement' THEN user_id END )     AS engagement
        ,COUNT(DISTINCT CASE WHEN event_type ='signup_flow' THEN user_id END )    AS signup_flow
        ,COUNT(DISTINCT CASE WHEN event_type ='engagement' THEN user_id END ) + 
        COUNT(DISTINCT CASE WHEN event_type ='signup_flow' THEN user_id END )     AS total
  FROM tutorial.yammer_events 
  GROUP BY 1 
  ORDER BY 1
) a



-- sign한 사람들중 얼마나 활성화로 전환되나
-- 활성화율은 크게변동 x , 활성화수는 증가하는 추세 >> 따라서 engagement에 분석에 방향을 초점을 둘 예정

SELECT  date_trunc('week', created_at)    AS week 
        ,SUM(CASE WHEN state = 'active' THEN 1 END) AS active_num
        ,COUNT(user_id)                             AS TOTAL
        ,SUM(CASE WHEN state = 'active' THEN 1 END)  /  CAST(count(user_id) AS FLOAT)  act_ratio
FROM tutorial.yammer_users
WHERE created_at >= '2014-04-28' 
GROUP BY 1 
ORDER BY 1




-- sign 과정 
SELECT  event_type
        , event_name
        , count(DISTINCT user_id)
FROM tutorial.yammer_events
WHERE event_type = 'signup_flow'
GROUP BY 1,2
ORDER BY 3 DESC


-- engagement 과정 분석 
-- engagement 과정을 특징대로 그룹화하여 어떤 단계에서 이탈이 되는지 분석하기로 함 

SELECT  event_type
        , event_name
        , count(DISTINCT user_id)
FROM tutorial.yammer_events
WHERE event_type = 'engagement'
GROUP BY 1,2
ORDER BY 3 DESC


-- login이 homepage접속보다 많은 count >> 로그인을 1번째 단계 or 둘을 접속이라는 단계로 통합고려 
-- 확인해보니 search_click이 여러단계로 분리됨 >> 검색결과 클릭을 search_click로 통합 , 이후 어떤 기준으로 그룹을 나눌까 고민해보려함 

SELECT  event_type
        , new_step
        , count(DISTINCT user_id)
FROM (
  SELECT *
        , CASE 
            WHEN event_name  LIKE '%search_click%' THEN 'search_click'
            ELSE event_name END 
          AS new_step
  FROM tutorial.yammer_events
  WHERE event_type = 'engagement'
) a
GROUP BY 1,2
ORDER BY 3 DESC



/*
단계정의

Yammer는 동료와 소통하기 위한 소셜 네트워크 >> 다음과 같은 단계로 임의로 나눠봄
1. login, homepage  : 접속단계 (access)
2. like_message , view_inbox, send_message : 사용단계 (communication)
3. search_autocomplete , search_run : 검색단계  (search)
4. search_click_result_1 ~ 10 : 검색결과 클릭   (search_click)
*/


WITH engagement_step AS (
SELECT  event_type
        , new_step
        , event_name
        , count(DISTINCT user_id) AS user_cnt
FROM (
  SELECT *
        , CASE 
            WHEN event_name in ('login','home_page')  THEN 'step1_access'
            WHEN event_name in ('like_message','view_inbox','send_message')  THEN 'step2_communication'
            WHEN event_name in ('search_autocomplete' , 'search_run')  THEN 'step3_search'
            ELSE 'step4_ search_click' END 
          AS new_step
  FROM tutorial.yammer_events
  WHERE event_type = 'engagement'
) a
GROUP BY 1,2,3
ORDER BY 2 
)


-- 전체 기간 engagement 이탈율 확인
-- 8월 이후 step 4 전환율이 확실히 낮아짐 약 4%p

WITH engagement_step AS (
SELECT    date_trunc('week', occurred_at)    AS week 
        , new_step
        , CAST(count(DISTINCT user_id) AS FLOAT)    AS  user_cnt
FROM (
  SELECT *
        , CASE 
            WHEN event_name in ('login','home_page')  THEN 'step1_access'
            WHEN event_name in ('like_message','view_inbox','send_message')  THEN 'step2_communication'
            WHEN event_name in ('search_autocomplete' , 'search_run')  THEN 'step3_search'
            ELSE 'step4_ search_click' END 
          AS new_step
  FROM tutorial.yammer_events
  WHERE event_type = 'engagement'
) a
GROUP BY 1,2
)


SELECT  *
      , lag(user_cnt, 1) OVER (PARTITION BY week)
      , user_cnt / lag(user_cnt, 1) OVER (PARTITION BY week)  AS bounce_rate
FROM engagement_step



-- engagement가 감소한 8.3 이후 전환율 확인해보기
SELECT  *
      , lag(user_cnt, 1) OVER (PARTITION BY week)
      , user_cnt / lag(user_cnt, 1) OVER (PARTITION BY week)  AS bounce_rate
FROM engagement_step
WHERE  week >= '2014-08-03'




--왜 낮아졌을까 디바이스별로 확인해보자 / 크게 phone 과 desktop으로 나눔

WITH engagement_step AS (
SELECT    date_trunc('week', occurred_at)    AS week 
        , device_group 
        , new_step
        , CAST(count(DISTINCT user_id) AS FLOAT)    AS  user_cnt
FROM (
  SELECT *
        , CASE 
            WHEN event_name in ('login','home_page')  THEN 'step1_access'
            WHEN event_name in ('like_message','view_inbox','send_message')  THEN 'step2_communication'
            WHEN event_name in ('search_autocomplete' , 'search_run')  THEN 'step3_search'
            ELSE 'step4_ search_click' END 
          AS new_step
         , CASE
          WHEN device LIKE '%book%' OR device LIKE '%desktop%'
          or device LIKE '%mac%'  or device LIKE '%window%' THEN 'desktop' 
          ELSE 'phone'
        END AS device_group
  FROM tutorial.yammer_events
  WHERE event_type = 'engagement'
) a
GROUP BY 1,2,3 
)

-- dsektop
SELECT  *
      , lag(user_cnt, 1) OVER (PARTITION BY week)
      , user_cnt / lag(user_cnt, 1) OVER (PARTITION BY week)  AS bounce_rate
FROM engagement_step
WHERE  device_group = 'desktop'

-- phone
SELECT  *
      , lag(user_cnt, 1) OVER (PARTITION BY week)
      , user_cnt / lag(user_cnt, 1) OVER (PARTITION BY week)  AS bounce_rate
FROM engagement_step
WHERE  device_group = 'phone'

-- 두그룹간 전환율 차이는 크지 않았음 >> 전환율이 떨어지는 이유는 디바이스에서 찾을 수 없었음 




-- 이메일 열람과 연관지어 더 분석
-- 먼저 이메일 테이블 분석 
-- 이메일 클릭율 email_clickthrough 에서  약 10%p 급감 
-- 원인 분모인 sent_weekly_digest 는 증가 , but email_clickthrough 는 현상유지


SELECT * 
      , click_cnt /  lag(click_cnt) OVER (PARTITION BY week ORDER BY action DESC)  AS click_ratio
FROM (
  SELECT date_trunc('week',  occurred_at)           AS week  
        , action
        , CAST(count(distinct user_id) AS FLOAT)    AS click_cnt
  FROM tutorial.yammer_emails 
  WHERE action <> 'sent_reengagement_email'
  GROUP BY 1,2
) a




-- click율과  앞서 분석한 engagement 단계와 관련이 있는지 분석해봄

WITH engagement_step AS (
SELECT *
      , CASE 
          WHEN event_name in ('login','home_page')  THEN 'step1_access'
          WHEN event_name in ('like_message','view_inbox','send_message')  THEN 'step2_communication'
          WHEN event_name in ('search_autocomplete' , 'search_run')  THEN 'step3_search'
          ELSE 'step4_ search_click' END 
        AS new_step
      , CASE
        WHEN device LIKE '%book%' OR device LIKE '%desktop%'
        or device LIKE '%mac%'  or device LIKE '%window%' THEN 'desktop' 
        ELSE 'phone'
      END AS device_group
FROM tutorial.yammer_events
WHERE event_type = 'engagement'
)


-- 크게 스텝별 차이 x

SELECT *
       , lag(click_cnt, 1) OVER (PARTITION BY week,new_step ORDER BY action DESC)
       , click_cnt / lag(click_cnt, 1) OVER (PARTITION BY week,new_step ORDER BY action DESC)  AS bounce_rate
FROM (
  SELECT date_trunc('week',  email.occurred_at)           AS week  
        , new_step
        , action
        , CAST(count(distinct email.user_id) AS FLOAT)    AS click_cnt
  FROM tutorial.yammer_emails  AS email
    INNER JOIN engagement_step ON email.user_id = engagement_step.user_id
  WHERE action <> 'sent_reengagement_email'
  GROUP BY 1,2,3
) a


--  이번엔 device 별로 분석해봄 
--  phone이  desktop보다 email_clickthrough 율이 차이가 5%p 정도 차이가 남  
SELECT *
       , lag(click_cnt, 1) OVER (PARTITION BY week,device_group ORDER BY action DESC)
       , click_cnt / lag(click_cnt, 1) OVER (PARTITION BY week,device_group ORDER BY action DESC)  AS bounce_rate
FROM (
  SELECT date_trunc('week',  email.occurred_at)           AS week  
        , device_group
        , action
        , CAST(count(distinct email.user_id) AS FLOAT)    AS click_cnt
  FROM tutorial.yammer_emails  AS email
    INNER JOIN engagement_step ON email.user_id = engagement_step.user_id
  WHERE action <> 'sent_reengagement_email'
  GROUP BY 1,2,3
) a
WHERE week >= '2014-08-03'






